<MDFlatButton>:
    md_bg_color:0.5,.6,0.7,1
    size_hint:0.25,1

<TipScreen>:
    name: 'tip_sc'
    ScrollView:
		size: root.height, root.width
		size_hint: 1,1
		scroll_wheel_distance: '80dp'
        GridLayout:
            size_hint_y: 1.92
            rows: 9
            GridLayout:
                cols:2
                size_hint_y: 0.08
                BoxLayout:
                    size_hint_x:0.15
                    MDIconButton:
                        id:info_button
                        pos:self.parent.pos
                        size:self.parent.size
                        user_font_size:dp(30)
                        icon:'menu'
                        on_release: root.nav_drawer.set_state('open')

                BoxLayout:
                    size_hint_x: 0.85
                    canvas:
                        Color:
                            rgba:0,0,0,0
                        Rectangle:
                            pos: self.pos
                            size: self.size
                        Color:
                            rgba: 1,1,1,1
                        Line:
                            width: dp(1)
                            points: [self.x,self.y+dp(10),self.x,self.y+self.height-dp(10)]
                    Label:
                        text: '  VTA-APP'
                        color: [1,1,1,1]
                        font_name: 'BlackHanSans-Regular.ttf'
                        text_size: self.size
                        halign: 'left'
                        valign: 'middle'
                        font_size: dp(30)
            ##### Title ####
            BoxLayout:
				size_hint_y: 0.08
				canvas:
					Color:
						rgba: 0.066,0.392,0.505,0.768
					Rectangle:
						pos: self.pos
						size: self.size
				Label:
					text: 'Velocity Analysis'
					font_size: dp(25)
					bold: True
			##### Buttons ####
            GridLayout:
                cols: 4
                size_hint_y:0.06
#                orientation: 'horizontal'


                MDFlatButton:
                    text: 'HUB'
                    on_press: root.manager.current = 'hub_sc'
                MDFlatButton:
                    text: 'MID'
                    on_press: root.manager.current = 'mid_sc'
                MDFlatButton:
                    text: 'TIP'
                MDFlatButton:
                    text: 'Comp'
                    on_press: root.manager.current = 'comp_sc'
            ############# Image Box ##############

			FloatLayout:
				size_hint_y: 0.4
				canvas:
				    Color:
                        rgba: 0.35,.45,0.55,1
                    Line:
                        width:dp(3)
                        points:(self.x+self.width/2,self.y+self.height,self.x+self.width*0.75,self.y+self.height)
					Color:
						rgba: 0.6862,0.9333,0.9333,0.737
                    Rectangle:
                        size: self.size
                        pos: self.pos
                    Color:
                        rgba: 1,1,1,1
					Rectangle:
						source: "images/new_images/comp_tip.png" if root.tc_nametText == 'Compressor Tip' else "images/new_images/turb_tip.png"
						size: self.width - dp(20),self.height - dp(20)
						pos: self.x + dp(10),self.y + dp(10)
                    Color:
                        rgba: 0,0,0,1
                    Line:
                        width: dp(1.5)
                        rectangle: (self.x + dp(10),self.y + dp(10),self.width - dp(20),self.height - dp(20))

            #################################################### Tip Velocity Triangles ############################################################################

			BoxLayout:
				# spacing:10
				size_hint_y: 0.08
				canvas:
					Color:
						rgba: 0.066,0.392,0.505,0.768
					Rectangle:
						pos: self.pos
						size: self.size
					Color:
						rgba:0,0,0,1
					Line:
						width: dp(1.5)
						points: (self.x, self.y + self.height, self.x + self.width, self.y + self.height)
					Line:
						width: dp(3)
						points: (self.x, self.y , self.x, self.y + self.height)
					Line:
						width: dp(3)
						points: (self.x + self.width, self.y,self.x+ self.width, self.y + self.height)

					Line:
						width: dp(3)
						points: (self.x, self.y, self.x + self.width, self.y)
				Label:
					text: 'Tip Velocity Triangles'
					font_size: dp(20)
					bold: True


			GridLayout:
				cols:2
				size_hint_y: 0.67

	###############   Grid gia diaxorismo titlou apo ta apotelesmata #######################
				GridLayout:
					rows:2
					size_hint_x:0.5

	##################################   Titlos    ####################################
					BoxLayout:
						size_hint_y:0.12
						spacing:10
						canvas:
							Color:
								rgba: 0.066,0.392,0.505,0.768
							Rectangle:
								pos: self.pos
								size: self.size
							Color:
								rgba:0,0,0,1
#                            Line:
#                                width: dp(1.5)
#                                points: (self.x,self.y + self.height, self.x+self.width,self.y + self.height)
							Line:
								width: dp(3.)
								points: (self.x, self.y, self.x, self.y+self.height)
							Line:
								width: dp(3.)
								points: (self.x+self.width, self.y, self.x + self.width, self.y+self.height)
						Label:
							text:'Coefficients and Angles'
							font_size: dp(15)
							bold:True
							text_size: self.size
							halign: 'center'
							valign: 'middle'

	################   Grid apotelespata aristera    ###########################
					GridLayout:
						cols:3
						canvas:
							Color:
								rgba: 0.6862,0.9333,0.9333,0.737
							Rectangle:
								pos: self.pos
								size: self.size
							Color:
								rgba:0,0,0,1
							Line:
								width: dp(3.)
								points: (self.x, self.y, self.x, self.y+self.height)
							Line:
								width: dp(3.)
								points: (self.x+self.width, self.y, self.x + self.width, self.y+self.height)
							Line:
								width: dp(3)
								points: (self.x, self.y, self.x + self.width, self.y)
							Line:
								width: dp(1.5)
								points: (self.x, self.y+self.height, self.x + self.width, self.y+self.height)

						GridLayout:
							rows:10
							size_hint_x:0.67

							Label:
								font_size:dp(11)
								text:"Loading Coefficient \u03C8 : "
								text_size: self.size
								halign: 'right'
								valign: 'middle'

							Label:
								font_size:dp(11)
								text:"Flow Coefficient \u03C61 : " if root.tc_namemText == 'Compressor Middle' else "Flow Coefficient \u03C63 : "
								text_size: self.size
								halign: 'right'
								valign: 'middle'

                            Label:
								font_size:dp(11)
								text:"Flow Coefficient \u03C62 : "
								text_size: self.size
								halign: 'right'
								valign: 'middle'

							Label:
								font_size:dp(11)
								text:"Reaction Coefficient Rn : "
								text_size: self.size
								halign: 'right'
								valign: 'middle'

							Label:
								font_size:dp(11)
								text:"Inlet absolute angle \u03B11 : "
								text_size: self.size
								halign: 'right'
								valign: 'middle'

							Label:
								font_size:dp(11)
								text:"Exit absolute angle \u03B12 : "
								text_size: self.size
								halign: 'right'
								valign: 'middle'

							Label:
								font_size:dp(11)
								text:"Inlet absolute angle \u03B13 : "
								text_size: self.size
								halign: 'right'
								valign: 'middle'

							Label:
								font_size:dp(11)
								text:"Inlet relative angle \u03B21 : "
								text_size: self.size
								halign: 'right'
								valign: 'middle'

							Label:
								font_size:dp(11)
								text:"Exit relative angle \u03B22 : "
								text_size: self.size
								halign: 'right'
								valign: 'middle'

							Label:
								font_size:dp(11)
								text:"Inlet relative angle \u03B23 : "
								text_size: self.size
								halign: 'right'
								valign: 'middle'


						GridLayout:
							rows:10
							size_hint_x:0.22

							Label:
								text: root.ptText
								font_size:dp(11)
								text_size: self.size
								halign: 'center'
								valign: 'middle'
							Label:
								text: root.ft1Text
								font_size:dp(11)
								text_size: self.size
								halign: 'center'
								valign: 'middle'
                            Label:
								text: root.ft2Text
								font_size:dp(11)
								text_size: self.size
								halign: 'center'
								valign: 'middle'
							Label:
								text: root.rntText
								font_size:dp(11)
								text_size: self.size
								halign: 'center'
								valign: 'middle'
							Label:
								text: root.a1tText if root.tc_namemText == 'Compressor Middle' else '------'
								font_size:dp(11)
								text_size: self.size
								halign: 'center'
								valign: 'middle'
							Label:
								text: root.a2tText
								font_size:dp(11)
								text_size: self.size
								halign: 'center'
								valign: 'middle'
							Label:
								text:'------' if root.tc_namemText == 'Compressor Middle' else root.a1tText
								font_size:dp(11)
								text_size: self.size
								halign: 'center'
								valign: 'middle'
							Label:
								text: root.b1tText if root.tc_namemText == 'Compressor Middle' else '------'
								font_size:dp(11)
								text_size: self.size
								halign: 'center'
								valign: 'middle'
							Label:
								text: root.b2tText
								font_size:dp(11)
								text_size: self.size
								halign: 'center'
								valign: 'middle'
							Label:
								#text: root.b3Text
								text:'------' if root.tc_namemText == 'Compressor Middle' else root.b1tText
								font_size:dp(11)
								text_size: self.size
								halign: 'center'
								valign: 'middle'

						GridLayout:
							rows:10
							size_hint_x:0.11

							Label:
								text: '[ - ]'
								font_size:dp(11)
								text_size: self.size
								halign: 'left'
								valign: 'middle'
							Label:
								text: '[ - ]'
								font_size:dp(11)
								text_size: self.size
								halign: 'left'
								valign: 'middle'
							Label:
								text: '[ - ]'
								font_size:dp(11)
								text_size: self.size
								halign: 'left'
								valign: 'middle'
                            Label:
								text: '[ - ]'
								font_size:dp(11)
								text_size: self.size
								halign: 'left'
								valign: 'middle'
							Label:
								text: '[ \u00B0 ]'
								font_size:dp(11)
								text_size: self.size
								halign: 'left'
								valign: 'middle'
							Label:
								text: '[ \u00B0 ]'
								font_size:dp(11)
								text_size: self.size
								halign: 'left'
								valign: 'middle'
							Label:
								text: '[ \u00B0 ]'
								font_size:dp(11)
								text_size: self.size
								halign: 'left'
								valign: 'middle'
							Label:
								text: '[ \u00B0 ]'
								font_size:dp(11)
								text_size: self.size
								halign: 'left'
								valign: 'middle'
							Label:
								text: '[ \u00B0 ]'
								font_size:dp(11)
								text_size: self.size
								halign: 'left'
								valign: 'middle'
							Label:
								#text: root.b3Text
								text:'[ \u00B0 ]'
								font_size:dp(11)
								text_size: self.size
								halign: 'left'
								valign: 'middle'

	############ Deksi grid to opoio diaxorizei ton titlo apo ta deksio apotelesmata ####################
				GridLayout:
					rows:2
					size_hint_x:0.5
	##################  Titlos ###############################
					BoxLayout:
						size_hint_y:0.12
						spacing:10
						canvas:
							Color:
								rgba: (0.066,0.392,0.505,0.768)
							Rectangle:
								pos: self.pos
								size: self.size
							Color:
								rgba: (0,0,0,1)

							Line:
								width: dp(3.)
								points: (self.x+ self.width, self.y,self.x+ self.width, self.y + self.height)
#                           Line:
#                               width: dp(1.5)
#                               points: (self.x, self.y + self.height,self.x+ self.width, self.y + self.height)


						Label:
							text:'Dimensional Velocities'
							font_size: dp(15)
							bold:True
							text_size: self.size
							halign: 'center'
							valign: 'middle'

	################   Grid apotelespatvn deksia   ########################
					GridLayout:
						cols:3
						canvas:
							Color:
								rgba: 0.6862,0.9333,0.9333,0.737
							Rectangle:
								pos: self.pos
								size: self.size
							Color:
								rgba: (0,0,0,1)
							Line:
								width: dp(3.)
								points: (self.x+self.width, self.y, self.x+self.width, self.y+self.height)
							Line:
								width: dp(1.5)
								points: (self.x, self.y+self.height,self.x+ self.width, self.y+self.height)
							Line:
								width: dp(3)
								points: (self.x, self.y,self.x+ self.width, self.y)

						GridLayout:
							rows:12
							size_hint_x:0.55

							Label:
								font_size:dp(11)
								text:' Tip rotational \n speed Ut   '
								text_size: self.size
								halign: 'right'
								valign: 'middle'
							Label:
								font_size:dp(11)
								text:" Axial Velocity at \n stage 1 Vx1 " if root.tc_namemText == 'Compressor Middle' else " Axial Velocity at \n stage 3 Vx3 "
								text_size: self.size
								halign: 'right'
								valign: 'middle'
                            Label:
								font_size:dp(11)
								text:" Axial Velocity at \n stage 2 Vx2 "
								text_size: self.size
								halign: 'right'
								valign: 'middle'
							Label:
								font_size:dp(11)
								text:(" Inlet relative \n velocity V1   "if root.tc_namemText == 'Compressor Middle' else " Exit relative \n velocity V3   ")
								text_size: self.size
								halign: 'right'
								valign: 'middle'
							Label:
								font_size:dp(11)
								text:" Exit absolute \n velocity V2   "
								text_size: self.size
								halign: 'right'
								valign: 'middle'
							Label:
								font_size:dp(11)
								text:(" Inlet relative \n velocity W1   "if root.tc_namemText == 'Compressor Middle' else " Exit relative \n velocity W3   ")
								text_size: self.size
								halign: 'right'
								valign: 'middle'
							Label:
								font_size:dp(11)
								text:" Exit relative \n velocity W2   "
								text_size: self.size
								halign: 'right'
								valign: 'middle'
							Label:
								font_size:dp(11)
								text:(" Absolute rotary \n velocity V\u03B81   " if root.tc_namemText == 'Compressor Middle' else " Absolute rotary \n velocity V\u03B83   ")
								text_size: self.size
								halign: 'right'
								valign: 'middle'
							Label:
								font_size:dp(11)
								text:" Absolute rotary \n velocity V\u03B82  "
								text_size: self.size
								halign: 'right'
								valign: 'middle'
							Label:
								font_size:dp(11)
								text:(" Relative rotary \n velocity W\u03B81   " if root.tc_namemText == 'Compressor Middle' else " Relative rotary \n velocity W\u03B83   ")
								text_size: self.size
								halign: 'right'
								valign: 'middle'
							Label:
								font_size:dp(11)
								text:" Absolute rotary \n velocity W\u03B82  "
								text_size: self.size
								halign: 'right'
								valign: 'middle'
							Label:
								font_size:dp(11)
								text:" Difference of rotary \n velocity DV\u03B8   "
								text_size: self.size
								halign: 'right'
								valign: 'middle'


						GridLayout:
							rows:12
							size_hint_x:0.25

							Label:
								text: root.UtText
								font_size:dp(11)
								text_size: self.size
								halign: 'center'
								valign: 'middle'
							Label:
								text: root.Vx1tText
								font_size:dp(11)
								text_size: self.size
								halign: 'center'
								valign: 'middle'
                            Label:
								text: root.Vx2tText
								font_size:dp(11)
								text_size: self.size
								halign: 'center'
								valign: 'middle'
							Label:
								text: root.V1tText
								font_size:dp(11)
								text_size: self.size
								halign: 'center'
								valign: 'middle'
							Label:
								#text: root.a1Text if slider0.value == 0 else '------'
								text: root.V2tText
								font_size:dp(11)
								text_size: self.size
								halign: 'center'
								valign: 'middle'
							Label:
								text: root.W1tText
								font_size:dp(11)
								text_size: self.size
								halign: 'center'
								valign: 'middle'
							Label:
								text: root.W2tText
								font_size:dp(11)
								text_size: self.size
								halign: 'center'
								valign: 'middle'
							Label:
								text: root.Vth1tText
								font_size:dp(11)
								text_size: self.size
								halign: 'center'
								valign: 'middle'
							Label:
								text: root.Vth2tText
								font_size:dp(11)
								text_size: self.size
								halign: 'center'
								valign: 'middle'
							Label:
								text: root.Wth1tText
								font_size:dp(11)
								text_size: self.size
								halign: 'center'
								valign: 'middle'
							Label:
								text: root.Wth2tText
								font_size:dp(11)
								text_size: self.size
								halign: 'center'
								valign: 'middle'
							Label:
								text: root.DVthtText
								font_size:dp(11)
								text_size: self.size
								halign: 'center'
								valign: 'middle'
						GridLayout:
							rows:12
							size_hint_x:0.2

							Label:
								text: '[ m/s ]'
								font_size:dp(11)
								text_size: self.size
								halign: 'left'
								valign: 'middle'
                            Label:
								text: '[ m/s ]'
								font_size:dp(11)
								text_size: self.size
								halign: 'left'
								valign: 'middle'
							Label:
								text: '[ m/s ]'
								font_size:dp(11)
								text_size: self.size
								halign: 'left'
								valign: 'middle'
							Label:
								text: '[ m/s ]'
								font_size:dp(11)
								text_size: self.size
								halign: 'left'
								valign: 'middle'
							Label:
								text: '[ m/s ]'
								font_size:dp(11)
								text_size: self.size
								halign: 'left'
								valign: 'middle'
							Label:
								text: '[ m/s ]'
								font_size:dp(11)
								text_size: self.size
								halign: 'left'
								valign: 'middle'
							Label:
								text: '[ m/s ]'
								font_size:dp(11)
								text_size: self.size
								halign: 'left'
								valign: 'middle'
							Label:
								text:'[ m/s ]'
								font_size:dp(11)
								text_size: self.size
								halign: 'left'
								valign: 'middle'
							Label:
								text: '[ m/s ]'
								font_size:dp(11)
								text_size: self.size
								halign: 'left'
								valign: 'middle'
							Label:
								text:'[ m/s ]'
								font_size:dp(11)
								text_size: self.size
								halign: 'left'
								valign: 'middle'
							Label:
								text: '[ m/s ]'
								font_size:dp(11)
								text_size: self.size
								halign: 'left'
								valign: 'middle'
							Label:
								#text: root.b3Text
								text:'[ m/s ]'
								font_size:dp(11)
								text_size: self.size
								halign: 'left'
								valign: 'middle'
			FloatLayout:
				size_hint_y: 0.45
				canvas:
					Color:
						rgba: 0.6862,0.9333,0.9333,0.737
					Rectangle:
						pos: self.pos
						size: self.size

	################ Drawing Area for the triangles  ##########################
					Color:
						rgba:0.5862,0.9333,0.9333,0.737
					Rectangle:
						pos:self.x + dp(20), self.y + dp(20)
						size:self.width - dp(40), self.height - dp(40)

					Color:
						rgba:0,0,0,1
					Line:
						width: dp(1.)
						rectangle: (self.x + dp(20), self.y + dp(20), self.width - dp(40), self.height - dp(40))

	###################    Color of the Lines    ##################
					Color:
						rgba:0,0,0,1
	###################    Ut line    ##########################
					Line:
						width: dp(1.5)
						points: (float(root.x0tText),self.y + float(root.y0Text),float(root.x1tText),self.y + float(root.y1Text))


	###################    V1t Line    ##########################
					Line:
						width: dp(1.5)
						points: (float(root.x0tText),self.y +float(root.y0Text),float(root.xRtText),self.y +float(root.yRtText))

	###################    W1t Line    ##########################
					Line:
						width: dp(1.5)
						points: (float(root.x1tText),self.y + float(root.y1Text),float(root.xRtText),self.y + float(root.yRtText))

	###################    W2t Line    ##########################
					Line:
						width: dp(1.5)
						points: (float(root.x1tText),self.y + float(root.y1Text),float(root.xLtText),self.y + float(root.yLtText))

	###################    V2t Line    ##########################
					Line:
						width: dp(1.5)
						points: (float(root.x0tText),self.y + float(root.y0Text),float(root.xLtText),self.y + float(root.yLtText))

	########### Lines, Dash lines and Labels ###################
	###################    U dashLine    ##########################
					Line:
						width: dp(1)
						points: (float(root.x0tText),self.y + float(root.y0Text)-dp(20),float(root.x1tText),self.y + float(root.y1Text)-dp(20))

	###################    U Dash lines    ##########################
					Line:
						width: dp(1)
						points: (float(root.x0tText),self.y + float(root.y0Text),float(root.x0tText),self.y + float(root.y0Text)-dp(30))
						dash_length: dp(5)
						dash_offset: dp(5)
					Line:
						width: dp(1)
						points: (float(root.x1tText),self.y + float(root.y0Text),float(root.x1tText),self.y + float(root.y0Text)-dp(30))
						dash_length: dp(5)
						dash_offset: dp(5)

                    ###################    Vx1 Line    ##########################
					Line:
						width: dp(1)
						points:
							(float(root.x0tText) - dp(20),self.y + float(root.y0Text),float(root.x0tText) - dp(20),self.y + float(root.yLtText))\
							if float(root.xLtText) > float(root.x0tText) else\
							(float(root.xLtText)- dp(20),self.y + float(root.y0Text),float(root.xLtText) - dp(20),self.y + float(root.yLtText))

	###################    Vx1 Dash lines    ##########################
					Line:
						width: dp(1)
						points:
							(float(root.x0tText),self.y + float(root.y0Text),float(root.x0tText) - dp(30),self.y + float(root.y0Text))\
							if float(root.xLtText) > float(root.x0tText) else\
							(float(root.x0tText),self.y + float(root.y0Text),float(root.xLtText) - dp(30) ,self.y + float(root.y0Text))
						dash_length: dp(5)
						dash_offset: dp(5)

                    Line:
						width: dp(1)
						points:
							(float(root.xLtText),self.y + float(root.yLtText),float(root.x0tText) - dp(30),self.y + float(root.yLtText))\
							if float(root.xLtText) > float(root.x0tText)  else\
							(float(root.xLtText),self.y + float(root.yLtText),float(root.xLtText) - dp(30),self.y + float(root.yLtText))
						dash_length: dp(5)
						dash_offset: dp(5)


	###################    Vx2 Line    ##########################
					Line:
						width: dp(1)
						points:
							(float(root.x1tText) + dp(20),self.y + float(root.y0Text),float(root.x1tText) + dp(20),self.y + float(root.yRtText))\
							if float(root.xRtText) < float(root.x1tText) else\
							(float(root.xRtText)+ dp(20),self.y + float(root.y0Text),float(root.xRtText)+ dp(20),self.y + float(root.yRtText))

	###################    Vx2 Dash lines    ##########################
					Line:
						width: dp(1)
						points:
							(float(root.x1tText),self.y + float(root.y1Text),float(root.x1tText) + dp(30),self.y + float(root.y0Text))\
							if float(root.xRtText) < float(root.x1tText) else\
							(float(root.x1tText),self.y + float(root.y0Text),float(root.xRtText) + dp(30) ,self.y + float(root.y1Text))
						dash_length: dp(5)
						dash_offset: dp(5)
					Line:
						width: dp(1)
						points:
							(float(root.xRtText),self.y + float(root.yRtText),float(root.x1tText) + dp(30),self.y + float(root.yRtText))\
							if float(root.xRtText) < float(root.x1tText)  else\
							(float(root.xRtText),self.y + float(root.yRtText),float(root.xRtText)+dp(30),self.y + float(root.yRtText))
						dash_length: dp(5)
						dash_offset: dp(5)

	###################   ΔVθ   Line    ##########################
					Line:
						width: dp(1)
						points:
						    (float(root.xLtText),self.y + float(root.yRtText) + dp(20),float(root.xRtText),self.y + float(root.yRtText) + dp(20))\
						    if float(root.yLtText)<float(root.yRtText) else\
						    (float(root.xLtText),self.y + float(root.yLtText) + dp(20),float(root.xRtText),self.y + float(root.yLtText) + dp(20))

	###################    ΔVθ  Dash lines    ##########################
					Line:
						width: dp(1)
						points:
						    (float(root.xLtText),self.y + float(root.yLtText),float(root.xLtText),self.y + float(root.yRtText)+dp(30))\
						    if float(root.yLtText)<float(root.yRtText) else\
						    (float(root.xLtText),self.y + float(root.yLtText),float(root.xLtText),self.y + float(root.yLtText)+dp(30))
						dash_length: dp(5)
						dash_offset: dp(5)
					Line:
						width: dp(1)
						points:
						    (float(root.xRtText),self.y + float(root.yRtText),float(root.xRtText),self.y + float(root.yRtText)+dp(30))\
						    if float(root.yLtText)<float(root.yRtText) else\
						    (float(root.xRtText),self.y + float(root.yRtText),float(root.xRtText),self.y + float(root.yLtText)+dp(30))
						dash_length: dp(5)
						dash_offset: dp(5)

	################### Circles of stages numbers ###############################
					Line:
						width: dp(1.)
						circle:
							(float(root.xLtText) - dp(15),self.y + float(root.yRtText) + dp(17),dp(10))\
							if float(root.yRtText) > float(root.yLtText) else\
							(float(root.xLtText) - dp(15),self.y + float(root.yLtText) + dp(17),dp(10))

					Line:
						width: dp(1.)
						circle:
							(float(root.xRtText) + dp(15),self.y + float(root.yRtText) + dp(17),dp(10))\
							if float(root.yRtText) > float(root.yLtText) else\
							(float(root.xRtText) + dp(15),self.y + float(root.yLtText) + dp(17),dp(10))



				 ################################  Arrows   ##########################################
	################### Base Velocity Arrows   ##########################

	                ################## U Arrow ########################
	                Color:
                        rgba: (1,1,1,0) if float(root.x1tText) - float(root.x0tText) < 30 else (0,0,0,1)
					Triangle:
						points:float(root.x0tText),self.y + float(root.y0Text),float(root.x0tText)+dp(25),self.y + float(root.y0Text)+dp(5),float(root.x0tText)+dp(25),self.y + float(root.y0Text)-dp(5)

                    ################## The other 4 Base Arrows ########################
                    Color:
                        rgba: (0,0,0,1)
					Triangle:
						points:float(root.x0tText),self.y + float(root.y0Text),float(root.xL1utText),self.y + float(root.yL1utText),float(root.xL1dtText),self.y + float(root.yL1dtText)

					Triangle:
						points:float(root.x0tText),self.y + float(root.y0Text),float(root.xL2utText),self.y + float(root.yL2utText),float(root.xL2dtText),self.y + float(root.yL2dtText)

					Triangle:
						points:float(root.x1tText),self.y + float(root.y1Text),float(root.xR1utText),self.y + float(root.yR1utText),float(root.xR1dtText),self.y + float(root.yR1dtText)

					Triangle:
						points:float(root.x1tText),self.y + float(root.y1Text),float(root.xR2utText),self.y + float(root.yR2utText),float(root.xR2dtText),self.y + float(root.yR2dtText)

	##################  U Line Arrows  ####################
	                Color:
                        rgba: (1,1,1,0) if float(root.x1tText) - float(root.x0tText) < dp(40) else (0,0,0,1)
					Triangle:
						points:
							float(root.x0tText),self.y + float(root.y0Text)-dp(20),float(root.x0tText)+dp(20),\
							self.y + float(root.y0Text)-dp(20)+dp(3),float(root.x0tText)+dp(20),self.y + float(root.y0Text)-dp(20)-dp(3)
					Triangle:
						points:
							float(root.x1tText),self.y + float(root.y1Text)-dp(20),float(root.x1tText)-dp(20),\
							self.y + float(root.y1Text)-dp(20)+dp(3),float(root.x1tText)-dp(20),self.y + float(root.y1Text)-dp(20)-dp(3)

	##################  ΔVθ Line Arrows  ####################
	                Color:
                        rgba: (1,1,1,0) if float(root.xRtText) - float(root.xLtText) < 25 else (0,0,0,1)
					Triangle:
						points:
							((float(root.xLtText),self.y + float(root.yRtText) + dp(20),float(root.xLtText)+ dp(20),self.y + float(root.yRtText) + dp(20) + dp(3),\
							float(root.xLtText)+ dp(20),self.y + float(root.yRtText) + dp(20) - dp(3))\
							if root.tc_nametText == 'Compressor Tip' else\
							(float(root.xRtText),self.y + float(root.yRtText) + dp(20),float(root.xRtText)- dp(20),self.y + float(root.yRtText) + dp(20) + dp(3),\
							float(root.xRtText)- dp(20),self.y + float(root.yRtText) + dp(20) - dp(3)))\
							if float(root.yRtText) > float(root.yLtText) else\
							((float(root.xLtText),self.y + float(root.yLtText) + dp(20),float(root.xLtText)+ dp(20),self.y + float(root.yLtText) + dp(20) + dp(3),\
							float(root.xLtText)+ dp(20),self.y + float(root.yLtText) + dp(20) - dp(3))\
							if root.tc_nametText == 'Compressor Tip' else\
							(float(root.xRtText),self.y + float(root.yLtText) + dp(20),float(root.xRtText)- dp(20),self.y + float(root.yLtText) + dp(20) + dp(3),\
							float(root.xRtText)- dp(20),self.y + float(root.yLtText) + dp(20) - dp(3)))

	#####################  Vx2 Line Arrows  ####################
	                Color:
	                    rgba: (1,1,1,0) if (float(root.yRtText) - float(root.y1Text)) < 25 else (0,0,0,1)
					Triangle:
						points:
							(float(root.x1tText) + dp(20),self.y + float(root.y1Text),float(root.x1tText) + dp(20) + dp(3),\
							self.y + float(root.y1Text)+dp(20),float(root.x1tText) + dp(20) - dp(3),self.y + float(root.y1Text)+dp(20))\
							if float(root.xRtText) < float(root.x1tText) else\
							(float(root.xRtText)+ dp(20),self.y + float(root.y1Text),float(root.xRtText)+ dp(20) + dp(3),\
							self.y + float(root.y1Text) + dp(20),float(root.xRtText)+ dp(20) - dp(3),self.y + float(root.y1Text) + dp(20))

                    #####################  Vx1 Line Arrows  ####################
                    Color:
	                    rgba: (1,1,1,0) if (float(root.yLtText) - float(root.y0Text)) < 25 else (0,0,0,1)
                    Triangle:
						points:
							(float(root.x0tText) - dp(20),self.y + float(root.y0Text),float(root.x0tText) - dp(20) + dp(3),\
							self.y + float(root.y1Text) + dp(20),float(root.x0tText) - dp(20) - dp(3),self.y + float(root.y0Text)+dp(20))\
							if float(root.xLtText) > float(root.x0tText) else\
							(float(root.xLtText) - dp(20),self.y + float(root.y1Text),float(root.xLtText) - dp(20) + dp(3),\
							self.y + float(root.y1Text) + dp(20),float(root.xLtText) - dp(20) - dp(3),self.y + float(root.y1Text) + dp(20))


	###################   Labels   ##########################
#				Label:
#					pos: (float(root.ptnt_xText),self.parent.y - self.parent.height/2 + dp(30))
#					text: root.tc_nametText
#					color: 1,0,0,1

				Label:
					text: 'U'
					pos: self.parent.x, self.parent.y - self.parent.height/2 + float(root.y0Text) -dp(35)

				Label:
					text: 'Vx2'
					pos:
						(self.parent.x + float(root.UtpText)/2 + dp(40),\
						self.parent.y - self.parent.height/2 + float(root.y0Text)/2 + float(root.yRtText)/2)\
						if float(root.xRtText)<float(root.x1tText)\
						else\
						(self.parent.x - self.parent.width/2 + float(root.xRtText) + dp(40),\
						self.parent.y - self.parent.height/2 + float(root.y0Text)/2 + float(root.yRtText)/2)

                Label:
					text: 'Vx1' if root.tc_namemText == 'Compressor Middle' else 'Vx3'
					pos:
						(self.parent.x - float(root.UtpText)/2 - dp(40),\
						self.parent.y - self.parent.height/2 + float(root.y0Text)/2 + float(root.yLtText)/2)\
						if float(root.xLtText)>float(root.x0tText)\
						else\
						(self.parent.x - self.parent.width/2 + float(root.xLtText) - dp(40),\
						self.parent.y - self.parent.height/2 + float(root.y0Text)/2 + float(root.yLtText)/2)

				Label:
					text: '\u0394V\u03B8'
					pos:
						(-float(root.UtpText)/2-float(root.x0tText)+float(root.xLtText)+float(root.UtpText)*float(root.ptText)/2,\
						self.parent.y - self.parent.height/2 + float(root.yRtText) + dp(35))\
						if float(root.yRtText) > float(root.yLtText) else\
						(-float(root.UtpText)/2-float(root.x0tText)+float(root.xLtText)+float(root.UtpText)*float(root.ptText)/2,\
						self.parent.y - self.parent.height/2 + float(root.yLtText) + dp(35))

				Label:
					text:'1' if root.tc_nametText == 'Compressor Tip' else '3'
					pos:
						(-float(root.UtpText)/2-float(root.x0tText)+float(root.xLtText) - dp(15),\
						self.parent.y - self.parent.height/2 + float(root.yRtText) + dp(17))\
						if float(root.yRtText) > float(root.yLtText) else\
						(-float(root.UtpText)/2-float(root.x0tText)+float(root.xLtText) - dp(15),\
						self.parent.y - self.parent.height/2 + float(root.yLtText) + dp(17))
				Label:
					text:'2'
					pos:
						(-float(root.UtpText)/2-float(root.x0tText)+float(root.xRtText) + dp(15),\
						self.parent.y - self.parent.height/2 + float(root.yRtText) + dp(17))\
						if float(root.yRtText) > float(root.yLtText) else\
						(-float(root.UtpText)/2-float(root.x0tText)+float(root.xRtText) + dp(15),\
						self.parent.y - self.parent.height/2 + float(root.yLtText) + dp(17))

                MDLabel:
                    pos: self.parent.x + dp(23),self.parent.y + self.height/2 - dp(30)
                    font_style: 'Body1'
                    text:
                        'Tip triangles were ' + (str(round(100*(1-(float(root.UtpText)*float(root.UmText)/(float(root.UtText)*float(root.UText)))),1))) + ' %' + ' scaled down.'\
                        if (float(root.UtpText) < (float(root.UtText)/float(root.UmText))*float(root.UText)) else ''

            GridLayout:
				cols:2
				size_hint_y: 0.1
				canvas:
					Color:
#						rgba: 0.6862,0.9333,0.9333,0.737
                        rgba: 0.6862,0.97,0.97,0.6
					Rectangle:
						pos: self.pos
						size: self.size
#                size_hint_y: 0.15
				BoxLayout:
					size_hint_x:0.3
					padding:dp(10)
					spacing:dp(10)
					MDRectangleFlatIconButton:
						icon:'arrow-left-bold'
						md_bg_color:[0.4,.4,.4,1]
						text_color: [1,1,1,1]
						size_hint:0.25,1
						text:"Back"
						on_release:
							root.manager.current = "Main"
							root.manager.transition.direction = "right"

				BoxLayout:
					size_hint_x:0.7
